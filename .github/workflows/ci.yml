name: MLflow Project CI with Docker Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  train-and-build-docker:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Setup Conda Environment using Micromamba
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: MLProject/conda.yaml
        environment-name: loan_approval_env
        cache-environment: true

    - name: Run MLflow Project
      shell: bash -el {0}
      run: |
        echo "=== Verifying Environment ==="
        which python
        which mlflow
        mlflow --version
        pip install docker
        
        echo "=== Running MLflow Project ==="
        cd MLProject
        mlflow run . --env-manager=local --experiment-name "LoanApprovalCI"

    - name: Debug MLruns Structure
      if: always()
      shell: bash -el {0}
      run: |
        echo "=== MLruns Directory Structure ==="
        ls -R ./MLProject/mlruns || echo "mlruns tidak ditemukan"
        echo ""
        echo "=== Mencari model artifacts (MLflow 2.0+ structure) ==="
        find ./MLProject/mlruns -type d -path '*/models/*/artifacts' || echo "Tidak ada di models/"
        echo ""
        echo "=== Mencari model artifacts (legacy structure) ==="
        find ./MLProject/mlruns -type d -path '*/artifacts/model' || echo "Tidak ada di artifacts/model"

    - name: Upload MLflow run artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: mlflow-run-artifacts
        path: ./MLProject/mlruns

    - name: Set up Docker Buildx
      if: success()
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      if: success()
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Docker image using MLflow
      if: success()
      shell: bash -el {0}
      env:
        IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/loan-approval-ci
        IMAGE_TAG: latest
      run: |
        echo "=== Building and Pushing Docker Image ==="
        
        # Try MLflow 2.0+ structure first (models/)
        MODEL_ARTIFACT_PATH=$(find ./MLProject/mlruns -type d -path '*/models/*/artifacts' | sort -r | head -n 1)
        
        # Fallback to legacy structure
        if [ -z "$MODEL_ARTIFACT_PATH" ]; then
          echo "Trying legacy structure..."
          MODEL_ARTIFACT_PATH=$(find ./MLProject/mlruns -type d -path '*/artifacts/model' | sort -r | head -n 1)
        fi
        
        echo "Model artifact path: $MODEL_ARTIFACT_PATH"
        
        if [ -z "$MODEL_ARTIFACT_PATH" ]; then
          echo "❌ ERROR: Tidak dapat menemukan model artifact"
          echo "Struktur mlruns:"
          find ./MLProject/mlruns -type d -name "artifacts"
          exit 1
        fi
        
        if [ ! -d "$MODEL_ARTIFACT_PATH" ]; then
          echo "❌ ERROR: Path $MODEL_ARTIFACT_PATH tidak valid"
          exit 1
        fi
        
        if [ ! -f "$MODEL_ARTIFACT_PATH/MLmodel" ]; then
          echo "❌ ERROR: File MLmodel tidak ditemukan"
          ls -la "$MODEL_ARTIFACT_PATH"
          exit 1
        fi
        
        echo "✅ Model artifact valid"
        echo "Contents:"
        ls -la "$MODEL_ARTIFACT_PATH"
        
        echo "Building Docker image..."
        mlflow models build-docker -m "$MODEL_ARTIFACT_PATH" -n $IMAGE_NAME:$IMAGE_TAG --enable-mlserver
        
        echo "Pushing Docker image..."
        docker push $IMAGE_NAME:$IMAGE_TAG
        
        echo "✅ Success!"
        echo "📦 Image: $IMAGE_NAME:$IMAGE_TAG"
        
        # Save Docker Hub link
        mkdir -p ./artifacts
        echo "https://hub.docker.com/r/${{ secrets.DOCKERHUB_USERNAME }}/loan-approval-ci" > ./artifacts/DockerHub_Link.txt
        
    - name: Upload Docker Hub Link
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: dockerhub-link
        path: ./artifacts/DockerHub_Link.txt